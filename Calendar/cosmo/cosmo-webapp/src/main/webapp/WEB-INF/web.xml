<?xml version="1.0" encoding="UTF-8"?>

<!--
    Copyright 2005-2007 Open Source Applications Foundation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
      version="3.0"> 
    <display-name>Cosmo</display-name>
 
   <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:/applicationContext.xml</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <context-param>
        <param-name>comsoContextFile</param-name>
        <param-value>classpath*:/applicationContext-cosmo.xml</param-value>
    </context-param>
    
	<context-param>
		<param-name>contextInitializerClasses</param-name>
		<param-value>org.unitedinternet.cosmo.servletcontext.CosmoApplicationContextInitializer</param-value>
	</context-param>
	
    <context-param>
        <param-name>propertiesLocation</param-name>
        <param-value>/etc/application.properties</param-value>
    </context-param>
    
    <listener>
        <listener-class>org.unitedinternet.cosmo.api.SpringContextInitializerListener</listener-class>
    </listener> 
     
	<listener>
        <listener-class>org.unitedinternet.cosmo.db.DbListener</listener-class>
    </listener>
     
    <listener>
        <listener-class>org.unitedinternet.cosmo.servletcontext.ConfigurationListener</listener-class>
    </listener>
    <listener>
	  <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	
	<listener>
        <listener-class>org.unitedinternet.cosmo.servletcontext.ContextFinalizer</listener-class>
    </listener>
    
    
    <filter>
            <filter-name>requestContextFilter</filter-name>
            <filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
    </filter>

    <!-- Default DAV auth entry point for filters -->
    
    <filter>
        <filter-name>dav-security</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>davFilterChainProxy</param-value>
        </init-param>
    </filter>
    <filter>
        <filter-name>hibernate-session</filter-name>
        <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
        <init-param>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>sessionFactory</param-value>
        </init-param>
    </filter>
    <filter>
        <filter-name>http-logging</filter-name>
        <filter-class>org.unitedinternet.cosmo.filters.HttpLoggingFilter</filter-class>
    </filter>
    <filter>
        <filter-name>username-request-integration</filter-name>
        <filter-class>org.unitedinternet.cosmo.filters.UsernameRequestIntegrationFilter</filter-class>
    </filter>
    <filter>
        <filter-name>http-override</filter-name>
        <filter-class>org.unitedinternet.cosmo.filters.HttpOverrideFilter</filter-class>
    </filter>
    <filter>
        <filter-name>retry-filter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>retryFilter</param-value>
        </init-param>
    </filter>

	
	<filter-mapping>
	        <filter-name>requestContextFilter</filter-name>
	        <servlet-name>/*</servlet-name>
	</filter-mapping>
    <filter-mapping>
        <filter-name>http-override</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>hibernate-session</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- extension filter should run before dav-security -->
    <filter-mapping>
        <filter-name>dav-security</filter-name>
        <url-pattern>/dav/*</url-pattern>
    </filter-mapping>
    <!-- these filters require security to have already been checked -->
    <filter-mapping>
        <filter-name>username-request-integration</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <filter-mapping>
        <filter-name>http-logging</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Retry filter needs to be last -->
    <filter-mapping>
        <filter-name>retry-filter</filter-name>
        <url-pattern>/dav/*</url-pattern>
    </filter-mapping>
    
    <error-page>
	   <exception-type>java.lang.Throwable</exception-type>
	<location>/error.jsp</location>
	</error-page>
	<error-page>
	   <error-code>404</error-code>
	<location>/error.jsp</location>
	</error-page>
	<error-page>
	   <error-code>500</error-code>
	<location>/error.jsp</location>
	</error-page>

    <servlet>
        <servlet-name>dav</servlet-name>
        <servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <welcome-file-list>
        <welcome-file>root</welcome-file>
    </welcome-file-list>
    
    <servlet-mapping>
        <servlet-name>dav</servlet-name>
        <url-pattern>/dav/*</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>5</session-timeout> 
    </session-config>
</web-app>
